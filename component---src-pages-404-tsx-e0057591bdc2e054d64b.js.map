{"version":3,"file":"component---src-pages-404-tsx-e0057591bdc2e054d64b.js","mappings":"gLAYaA,EAAe,SAAC,GAMJ,IALvBC,EAKsB,EALtBA,MACAC,EAIsB,EAJtBA,YACAC,EAGsB,EAHtBA,SAGsB,IAFtBC,SAAAA,OAEsB,MAFX,KAEW,EADtBC,EACsB,EADtBA,SAEA,GChBaC,EAAAA,EAAAA,gBAAe,cAYhBC,KAAKC,aDKRC,EADT,EACER,MACaS,EAFf,EAEER,YAIIS,EAAM,CACVV,MAAOA,GAASQ,EAChBP,YAAaA,GAAeQ,EAC5BE,IAAI,GATN,EAGEC,SAMkBV,GAAQ,KAItBW,EAAWV,EACVO,EAAIV,MADc,OACHc,EAAAA,EAAAA,GAAsBX,GACxCO,EAAIV,MAER,OACEe,EAAAA,cAAAA,EAAAA,SAAAA,KACEA,EAAAA,cAAAA,QAAAA,KAAQF,GACRE,EAAAA,cAAAA,OAAAA,CAAMC,KAAK,cAAcC,QAASP,EAAIT,cAOtCc,EAAAA,cAAAA,OAAAA,CACEG,IAAI,OACJC,KAAK,oIAENf,EAtCA,C,kGEPDgB,EAASC,EAAAA,QAAAA,IAAAA,WAAsB,CAAEC,YAAa,wBAAxCC,WAAA,CAAAC,YAAAA,iBAAAF,YAAAA,eAAGD,CAAH,yEAYZ,UAJqB,WACnB,OAAON,EAAAA,cAACK,EAAD,sBADT,EAMO,IAAMK,EAAO,kBAAMV,EAAAA,cAAChB,EAAAA,EAAD,CAAcC,MAAM,sBAAvC,C,4FCjBA,SAASc,EAAsBY,GACpC,OAAOA,EAAOC,OAAO,GAAGC,cAAgBF,EAAOG,MAAM,EAGvD,CAAO,SAASC,EAAyBC,EAAoBC,QAAkB,IAAlBA,IAAAA,EAAc,IACzE,IAAMC,EAAe,IAAIC,OAAJ,IAAeF,EAAf,IAAuB,MAY5C,OAViBD,EACdI,MAAMF,GACNG,KAAI,SAACC,GAAD,aACHA,EAAKC,uBAAL,QAAAD,EAA6BL,SAA7B,aAA6BO,EAAKD,qBAChCvB,EAAAA,cAAAA,OAAAA,CAAMyB,UAAU,aAAaH,GAE7BA,CANW,GAWlB,C","sources":["webpack://Dennnnny.io/./src/components/Container/seoContainer.tsx","webpack://Dennnnny.io/./src/tool/useSiteMetadata.ts","webpack://Dennnnny.io/./src/pages/404.tsx","webpack://Dennnnny.io/./src/tool/functions.tsx"],"sourcesContent":["import React from \"react\";\nimport { useSiteMetadata } from \"@tool/useSiteMetadata\";\nimport { capitalizeFirstLetter } from \"@tool/functions\";\n\ntype SeoContainerType = {\n  title?: string;\n  description?: string;\n  pathname?: string;\n  subtitle?: string | null;\n  children?: React.ReactNode;\n};\n\nexport const SeoContainer = ({\n  title,\n  description,\n  pathname,\n  subtitle = null,\n  children,\n}: SeoContainerType) => {\n  const {\n    title: defaultTitle,\n    description: defaultDescription,\n    siteUrl,\n  } = useSiteMetadata();\n\n  const seo = {\n    title: title || defaultTitle,\n    description: description || defaultDescription,\n    url: `${siteUrl}${pathname || ``}`,\n    // twitterUsername,\n  };\n\n  const seoTitle = subtitle\n    ? `${seo.title} | ${capitalizeFirstLetter(subtitle)}`\n    : seo.title;\n\n  return (\n    <>\n      <title>{seoTitle}</title>\n      <meta name=\"description\" content={seo.description} />\n      {/* <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:title\" content={seo.title} />\n      <meta name=\"twitter:url\" content={seo.url} />\n      <meta name=\"twitter:description\" content={seo.description} />\n      <meta name=\"twitter:image\" content={seo.image} />\n      <meta name=\"twitter:creator\" content={seo.twitterUsername} /> */}\n      <link\n        rel=\"icon\"\n        href=\"data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 100 100'><text y='0.9em' font-size='90'>☀️</text></svg>\"\n      />\n      {children}\n    </>\n  );\n};\n","import { graphql, useStaticQuery } from \"gatsby\";\n\nexport const useSiteMetadata = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      site {\n        siteMetadata {\n          title\n          description\n          siteUrl\n        }\n      }\n    }\n  `);\n\n  return data.site.siteMetadata;\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { SeoContainer } from \"@components/Container/seoContainer\";\nimport { graphql } from \"gatsby\";\n\nconst Layout = styled.div.withConfig({ componentId: \"NotFoundPage_Layout\" })`\n  .main-body {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n`;\n\nconst NotFoundPage = () => {\n  return <Layout>Page not found</Layout>;\n};\n\nexport default NotFoundPage;\n\nexport const Head = () => <SeoContainer title=\"Oops ... not found\" />;\n\nexport const query = graphql`\n  query ($language: String!) {\n    locales: allLocale(filter: { language: { eq: $language } }) {\n      edges {\n        node {\n          ns\n          data\n          language\n        }\n      }\n    }\n  }\n`;\n","import React from \"react\";\n\nexport function capitalizeFirstLetter(string: string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nexport function transformTextToHighlight(originText: string, key: string = \"\") {\n  const highlightKey = new RegExp(`(${key})`, \"ig\");\n\n  const tagsList = originText\n    .split(highlightKey)\n    .map((text) =>\n      text.toLocaleLowerCase() === key?.toLocaleLowerCase() ? (\n        <span className=\"highlight\">{text}</span>\n      ) : (\n        text\n      )\n    );\n\n  return tagsList;\n}\n"],"names":["SeoContainer","title","description","pathname","subtitle","children","useStaticQuery","site","siteMetadata","defaultTitle","defaultDescription","seo","url","siteUrl","seoTitle","capitalizeFirstLetter","React","name","content","rel","href","Layout","styled","componentId","withConfig","displayName","Head","string","charAt","toUpperCase","slice","transformTextToHighlight","originText","key","highlightKey","RegExp","split","map","text","toLocaleLowerCase","_key","className"],"sourceRoot":""}