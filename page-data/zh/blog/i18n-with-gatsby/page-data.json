{"componentChunkName":"component---src-templates-blog-index-tsx","path":"/zh/blog/i18n-with-gatsby","result":{"data":{"locales":{"edges":[{"node":{"ns":"tags","data":"{\"filter-tags\":\"用標籤/標題篩選文章\",\"javascript\":\"javascript\",\"note\":\"筆記\",\"gatsby\":\"gatsby\",\"typescript\":\"typescript\",\"series\":\"系列\",\"style\":\"樣式\",\"gsap\":\"gsap\",\"animation\":\"動畫\"}","language":"zh"}},{"node":{"ns":"frontpage","data":"{\"content\":\"２０２２這年，這個網站誕生了\\n因為想要有個地方紀錄自己的成長\\n於是開始製作這個部落格\\n這裡主要是紀錄學習筆記\\n以便日後有需要的話可以來回顧\\n裡面會放一些學習筆記與小作品\\n如果內容有什麼錯誤的\\n還望各位不吝指教\\n也歡迎留言分享與討論\\n希望大家逛得開心\\n👋 \",\"skip\":\"略過\",\"resume\":\"關於我\"}","language":"zh"}},{"node":{"ns":"index","data":"{\"about\":\"關於我\",\"change-log\":\"開發日誌\",\"comments\":\"評論\",\"home\":\"家\",\"blog\":\"文章\",\"project\":\"作品\",\"contact\":\"聯絡我\",\"contact-form-title\":\"歡迎留下任何你想說的話 🙏\",\"contact-form-name\":\"你的名稱\",\"contact-form-messages\":\"想說的話\",\"submit\":\"送出\",\"close\":\"關閉\",\"contact-form-success\":\"🎉 已成功送出 🎉\",\"contact-form-errors\":\"抱歉😿\\n好像有什麼出錯了\",\"found-nothing\":\"沒有找到文章...\",\"themeTitle\":\"主題模式\",\"dark\":\"深色\",\"light\":\"淺色\",\"languageTitle\":\"選擇語言\",\"zh\":\"中文\",\"en\":\"英文\",\"workInProgress\":\"努力產出中...\",\"image-source\":\"圖片來源 \",\"what\":\".dsadas..\"}","language":"zh"}}]},"blog":{"frontmatter":{"title":"在Gatsby中，建立多語言頁面","date":"2022-11-03T02:31:13.903Z","image_cover":"https://images.unsplash.com/photo-1521295121783-8a321d551ad2?fit=crop&w=1000&q=80","img_source":null},"html":"<h2>在 Gatsby 裡實現多語言頁面</h2>\n<p>i18n, 是 internationalization 的簡稱\n這個功能我是採用一個 plugin 來完成的\n<code>gatsby-plugin-react-i18next</code> 👈\n大致上的操作都可以依照<a href=\"https://www.gatsbyjs.com/plugins/gatsby-plugin-react-i18next/\">官方文件</a>來做</p>\n<p>以下是我在實作的時候 遇到的一些問題</p>\n<div class=\"separate_line\">...</div>\n<h2># 沒有在頁面中拿到正確的語言</h2>\n<p>遇到的第一個小問題：沒有在頁面中拿到正確的語言\n舉例，我放了中文與英文\n但是程式執行後只拿到了一組語言\n所以我就去尋找如何解決這個問題～\n然後找到了<a href=\"https://andremonteiro.pt/gatsby-i18next-wrap-page-element/\">這篇文章</a>這個作者也有遇到相似的問題</p>\n<p>看起來是 在 gatsby-browser 裡面\n沒有正確的使用到 i18n 的物件</p>\n<p>(gatsby-brwoser)原本的寫法像是:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"js\" data-index=\"0\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// Wraps every page in a component</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk10\">exports</span><span class=\"mtk1\">.</span><span class=\"mtk11\">wrapPageElement</span><span class=\"mtk1\"> = ({ </span><span class=\"mtk12\">element</span><span class=\"mtk1\">, </span><span class=\"mtk12\">props</span><span class=\"mtk1\"> }) </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk17\">&lt;</span><span class=\"mtk10\">Layout</span><span class=\"mtk1\"> </span><span class=\"mtk4\">{</span><span class=\"mtk1\">...</span><span class=\"mtk12\">props</span><span class=\"mtk4\">}</span><span class=\"mtk17\">&gt;</span><span class=\"mtk4\">{</span><span class=\"mtk12\">element</span><span class=\"mtk4\">}</span><span class=\"mtk17\">&lt;/</span><span class=\"mtk10\">Layout</span><span class=\"mtk17\">&gt;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">};</span></span></span></code></pre>\n<p>但這裡會遇到一個警告/錯誤\n<code>warn react-i18next:: You will need to pass in an i18next instance by using initReactI18next</code>\n沒有使用對的方式使用這個功能 ＱＱ\n照著這個模式重組 gatsby-browser\n就沒有沒有出現拿不到語言的錯誤了</p>\n<div class=\"separate_line\">...</div>\n<h2># Hydration issue</h2>\n<p>遇到的第二個小問題： hydration 的問題\n實在不知道英文要打什麼</p>\n<p>因為我在開啟頁面的時候\n常常會看到<a href=\"https://reactjs.org/docs/error-decoder.html/?invariant=418\">警告</a>\n還有<a href=\"https://reactjs.org/docs/error-decoder.html/?invariant=422\">這個</a>\n兩個大概都是在 hydrating 的時候的產生出的問題\n關於這個 hydrating 的東西\n我自己還沒能解釋得更清楚\n所以 ... 我會在搞懂之後 另外做一集來講解</p>\n<p>而最終 之所以會出現這個問題\n是因為我在切換語言的時候\ni18next-plugin 做了一個紀錄在 localStorage 裡\n然後 當我重新進入頁面的時候\n他去讀取了 localStorage 裡的語言 然後把畫面渲染成那個語言\n但原本假設預設的語言跟 localStorage 裡的語言不同的時候\n在 server-side-render 中的預設語言\n就會跟在 client-side-render 裡 從 localStorage 裡拿出來的不同\n所以造成了這個問題</p>\n<p>解決的辦法其實可以在設定 config 的時候調整成不要自動轉跳\n預設讓他第一次進來的時候 都能保持預設的語言 就行了</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"js\" data-index=\"1\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// gastby-config</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">{</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  resolve: </span><span class=\"mtk8\">`gatsby-plugin-react-i18next`</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  options: {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">//...config,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    generateDefaultLanguagePage: </span><span class=\"mtk4\">true</span><span class=\"mtk1\">, </span><span class=\"mtk3\">// 新增這個</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    redirect: </span><span class=\"mtk4\">false</span><span class=\"mtk1\">, </span><span class=\"mtk3\">// 和新增這個</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  },</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\">//...setting</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">},</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span></code></pre>\n<p>以上是今天的分享 👋</p>\n<style class=\"grvsc-styles\">\n  .grvsc-container {\n    overflow: auto;\n    position: relative;\n    -webkit-overflow-scrolling: touch;\n    padding-top: 1rem;\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\n    padding-bottom: 1rem;\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\n    border-radius: 8px;\n    border-radius: var(--grvsc-border-radius, 8px);\n    font-feature-settings: normal;\n    line-height: 1.4;\n  }\n  \n  .grvsc-code {\n    display: table;\n  }\n  \n  .grvsc-line {\n    display: table-row;\n    box-sizing: border-box;\n    width: 100%;\n    position: relative;\n  }\n  \n  .grvsc-line > * {\n    position: relative;\n  }\n  \n  .grvsc-gutter-pad {\n    display: table-cell;\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  .grvsc-gutter {\n    display: table-cell;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter::before {\n    content: attr(data-content);\n  }\n  \n  .grvsc-source {\n    display: table-cell;\n    padding-left: 1.5rem;\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\n    padding-right: 1.5rem;\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\n  }\n  \n  .grvsc-source:empty::after {\n    content: ' ';\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter + .grvsc-source {\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  /* Line transformer styles */\n  \n  .grvsc-has-line-highlighting > .grvsc-code > .grvsc-line::before {\n    content: ' ';\n    position: absolute;\n    width: 100%;\n  }\n  \n  .grvsc-line-diff-add::before {\n    background-color: var(--grvsc-line-diff-add-background-color, rgba(0, 255, 60, 0.2));\n  }\n  \n  .grvsc-line-diff-del::before {\n    background-color: var(--grvsc-line-diff-del-background-color, rgba(255, 0, 20, 0.2));\n  }\n  \n  .grvsc-line-number {\n    padding: 0 2px;\n    text-align: right;\n    opacity: 0.7;\n  }\n  \n  .dark-default-dark {\n    background-color: #1E1E1E;\n    color: #D4D4D4;\n  }\n  .dark-default-dark .mtk3 { color: #6A9955; }\n  .dark-default-dark .mtk10 { color: #4EC9B0; }\n  .dark-default-dark .mtk1 { color: #D4D4D4; }\n  .dark-default-dark .mtk11 { color: #DCDCAA; }\n  .dark-default-dark .mtk12 { color: #9CDCFE; }\n  .dark-default-dark .mtk4 { color: #569CD6; }\n  .dark-default-dark .mtk15 { color: #C586C0; }\n  .dark-default-dark .mtk17 { color: #808080; }\n  .dark-default-dark .mtk8 { color: #CE9178; }\n  .dark-default-dark .grvsc-line-highlighted::before {\n    background-color: var(--grvsc-line-highlighted-background-color, rgba(255, 255, 255, 0.1));\n    box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, rgba(255, 255, 255, 0.5));\n  }\n</style>"}},"pageContext":{"language":"zh","name":"i18n-with-gatsby","i18n":{"language":"zh","languages":["en","zh"],"defaultLanguage":"en","generateDefaultLanguagePage":false,"routed":true,"originalPath":"/blog/i18n-with-gatsby","path":"zh/blog/i18n-with-gatsby"}}},"staticQueryHashes":["3764592887"]}