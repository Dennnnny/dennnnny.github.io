{"componentChunkName":"component---src-templates-blog-index-tsx","path":"/zh/zh/blog/equality-comparison-in-javascript","result":{"data":{"locales":{"edges":[{"node":{"ns":"index","data":"{\"about\":\"關於我\",\"comments\":\"評論\",\"home\":\"家\",\"blog\":\"文章\",\"project\":\"作品\",\"contact\":\"聯絡我\",\"contact-form-title\":\"歡迎留下任何你想說的話 🙏\",\"contact-form-name\":\"你的名稱\",\"contact-form-messages\":\"想說的話\",\"submit\":\"送出\",\"close\":\"關閉\",\"contact-form-success\":\"🎉 已成功送出 🎉\",\"contact-form-errors\":\"抱歉😿\\n好像有什麼出錯了\",\"found-nothing\":\"沒有找到文章...\",\"themeTitle\":\"主題模式\",\"dark\":\"深色\",\"light\":\"淺色\",\"languageTitle\":\"選擇語言\",\"zh\":\"中文\",\"en\":\"英文\",\"workInProgress\":\"努力產出中...\",\"image-source\":\"圖片來源 unsplash\",\"what\":\".dsadas..\"}","language":"zh"}},{"node":{"ns":"tags","data":"{\"filter-tags\":\"用標籤/標題篩選文章\",\"javascript\":\"javascript\",\"note\":\"筆記\",\"gatsby\":\"gatsby\",\"typescript\":\"typescript\",\"series\":\"系列\"}","language":"zh"}}]},"blog":{"frontmatter":{"title":"Javascript怎麼做比較的","date":"2022-10-19T13:28:52.670Z","image_cover":"https://images.unsplash.com/photo-1517694712202-14dd9538aa97?fit=crop&w=1000&q=80"},"html":"<h1>Javascript 裡的比較</h1>\n<p>最近重新看了一下 js 的一些基礎<br>\n然後對於這個 比較 才是更明白了一些</p>\n<p>說到等於 『 = 』 這個符號<br>\n在 js 裡有兩種用法</p>\n<p>第一種是賦值給變數<br>\n例如 let x = 1</p>\n<p>第二種就是比較<br>\n比較又分兩種<br>\n比較嚴謹的 === 與不嚴謹的 ==<br>\n兩者的差異是</p>\n<p>在嚴謹模式 === 下<br>\n比較值兩邊要 同時符合 相等的值與量同的型別 才會回傳 true<br>\n否則就是 false</p>\n<p>而在 不那麼嚴謹的比較之下 ==<br>\njs 會偷偷幫你做型別的轉換<br>\n然後再拿來做比較<br>\n所以有時候會出現令人費解的比較結果\n例如以下範例</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"js\" data-index=\"0\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">[</span><span class=\"mtk7\">0</span><span class=\"mtk1\">] == </span><span class=\"mtk8\">&quot;&quot;</span><span class=\"mtk1\">; </span><span class=\"mtk3\">//false</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">[</span><span class=\"mtk7\">0</span><span class=\"mtk1\">] == </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk3\">//true</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">[</span><span class=\"mtk8\">&quot;&quot;</span><span class=\"mtk1\">] == </span><span class=\"mtk8\">&quot;&quot;</span><span class=\"mtk1\">; </span><span class=\"mtk3\">//true</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">[</span><span class=\"mtk8\">&quot;&quot;</span><span class=\"mtk1\">] == </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk3\">//true;</span></span></span></code></pre>\n<p>怎麼會 [0] == \"\" 是錯的 而其他的又都是對的呢 ！！<br>\n當知道原因後 就沒那麼難理解了</p>\n<p>Js 偷偷在背後幫你做的型別轉換是有規則的<br>\n根據 <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Equality\">MDN 的解釋</a><br>\n簡單來說（粗略的說明，詳細請參考 MDN）<br>\nJs 會想辦法把兩邊 變成同樣的型別來做比較</p>\n<p>規則是</p>\n<ul>\n<li>\n<p>在相同型別下<br>\n<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Equality#description\">參考這裡</a></p>\n</li>\n<li>\n<p>非相同型別比較</p>\n</li>\n</ul>\n<ol>\n<li>\n<p>物件型別 vs 基本型別<br>\n=> 把物件轉成基本型別<br>\n=> 做法是 依序試試看兩種方式 : valueOf() / toString()<br>\n=> 如果 valueOf 沒有拿到基本型別的值 ， 則會使用 toString() 的方式轉換成 string 來比較</p>\n</li>\n<li>\n<p>基本型別 - Boolean vs 基本型別 - 其他(String, Number)<br>\n=> 把 Boolean 轉成 Number (<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number#number_coercion\">參考</a>)</p>\n</li>\n<li>\n<p>基本型別 - String vs 基本型別 - Number<br>\n=> 把 String 轉成 Number (<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number#number_coercion\">參考</a>)</p>\n</li>\n</ol>\n<p>轉化完後就可以進行比較了<br>\n以上面的例子來看</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"js\" data-index=\"1\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">//1.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">[</span><span class=\"mtk7\">0</span><span class=\"mtk1\">] == </span><span class=\"mtk8\">&quot;&quot;</span><span class=\"mtk1\">; </span><span class=\"mtk3\">//object vs string</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// 因為 [0].valueOf() 還是[0] 所以會使用toString()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">&quot;[0]&quot;</span><span class=\"mtk1\"> == </span><span class=\"mtk8\">&quot;&quot;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// 然後比較出來等於 false</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">//2.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">[</span><span class=\"mtk7\">0</span><span class=\"mtk1\">] == </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk3\">// object cs number</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// 同上</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">&quot;[0]&quot;</span><span class=\"mtk1\"> == </span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// 接著做字串轉成數字： &quot;[0]&quot; -&gt; NaN,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">NaN</span><span class=\"mtk1\"> == </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk3\">// 得到結果 false</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// 其他的也可以依照這個邏輯來解答</span></span></span></code></pre>\n<p>以上是我再次看了網路上前輩的<a href=\"https://ithelp.ithome.com.tw/articles/10191254\">鐵人賽文章</a>之後<br>\n重新獲得的知識<br>\n只能說以前的自己其實也沒有很理解 js<br>\n希望自己可以越來越好</p>\n<p>以上是今天的分享 👋</p>\n<style class=\"grvsc-styles\">\n  .grvsc-container {\n    overflow: auto;\n    position: relative;\n    -webkit-overflow-scrolling: touch;\n    padding-top: 1rem;\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\n    padding-bottom: 1rem;\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\n    border-radius: 8px;\n    border-radius: var(--grvsc-border-radius, 8px);\n    font-feature-settings: normal;\n    line-height: 1.4;\n  }\n  \n  .grvsc-code {\n    display: table;\n  }\n  \n  .grvsc-line {\n    display: table-row;\n    box-sizing: border-box;\n    width: 100%;\n    position: relative;\n  }\n  \n  .grvsc-line > * {\n    position: relative;\n  }\n  \n  .grvsc-gutter-pad {\n    display: table-cell;\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  .grvsc-gutter {\n    display: table-cell;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter::before {\n    content: attr(data-content);\n  }\n  \n  .grvsc-source {\n    display: table-cell;\n    padding-left: 1.5rem;\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\n    padding-right: 1.5rem;\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\n  }\n  \n  .grvsc-source:empty::after {\n    content: ' ';\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter + .grvsc-source {\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  /* Line transformer styles */\n  \n  .grvsc-has-line-highlighting > .grvsc-code > .grvsc-line::before {\n    content: ' ';\n    position: absolute;\n    width: 100%;\n  }\n  \n  .grvsc-line-diff-add::before {\n    background-color: var(--grvsc-line-diff-add-background-color, rgba(0, 255, 60, 0.2));\n  }\n  \n  .grvsc-line-diff-del::before {\n    background-color: var(--grvsc-line-diff-del-background-color, rgba(255, 0, 20, 0.2));\n  }\n  \n  .grvsc-line-number {\n    padding: 0 2px;\n    text-align: right;\n    opacity: 0.7;\n  }\n  \n  .dark-default-dark {\n    background-color: #1E1E1E;\n    color: #D4D4D4;\n  }\n  .dark-default-dark .mtk1 { color: #D4D4D4; }\n  .dark-default-dark .mtk7 { color: #B5CEA8; }\n  .dark-default-dark .mtk8 { color: #CE9178; }\n  .dark-default-dark .mtk3 { color: #6A9955; }\n  .dark-default-dark .mtk4 { color: #569CD6; }\n  .dark-default-dark .grvsc-line-highlighted::before {\n    background-color: var(--grvsc-line-highlighted-background-color, rgba(255, 255, 255, 0.1));\n    box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, rgba(255, 255, 255, 0.5));\n  }\n</style>"}},"pageContext":{"language":"zh","name":"equality-comparison-in-javascript","i18n":{"language":"zh","languages":["en","zh"],"defaultLanguage":"en","generateDefaultLanguagePage":false,"routed":true,"originalPath":"/zh/blog/equality-comparison-in-javascript","path":"zh/zh/blog/equality-comparison-in-javascript"}}},"staticQueryHashes":["3764592887"]}