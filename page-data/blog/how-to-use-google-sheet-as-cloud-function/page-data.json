{"componentChunkName":"component---src-templates-blog-index-tsx","path":"/blog/how-to-use-google-sheet-as-cloud-function","result":{"data":{"locales":{"edges":[{"node":{"ns":"frontpage","data":"{\"content\":\"In ÔºíÔºêÔºíÔºíÔºåthis page was born\\nI want a place to record my progress\\nSo, I started to build this blog\\nIn here, I'll write down what I learned\\nIn case I need some recap\\nYou will see what I've learned \\nand what I've built\\nIf there's any mistakes or misunderstanding\\n Please, has no hesitate to tell me\\nHope you enjoy it! \\n May the force be with you üññ \",\"skip\":\"SKIP\",\"resume\":\"Resume\"}","language":"en"}},{"node":{"ns":"tags","data":"{\"filter-tags\":\"find the post by title/tags\",\"javascript\":\"javascript\",\"note\":\"note\",\"gatsby\":\"gatsby\",\"typescript\":\"typescript\",\"series\":\"series\",\"style\":\"style\",\"gsap\":\"gsap\",\"animation\":\"animation\",\"google-sheet\":\"Google Sheet\",\"cloud-function\":\"Cloud Function\",\"slack\":\"slack\"}","language":"en"}},{"node":{"ns":"index","data":"{\"about\":\"About\",\"change-log\":\"Change Log\",\"comments\":\"comments\",\"home\":\"home\",\"blog\":\"Blog\",\"project\":\"Project\",\"contact\":\"Contact\",\"contact-form-title\":\"Any feedback is welcome üôè\",\"contact-form-name\":\"Your Name\",\"contact-form-messages\":\"Anything You Want To Say\",\"submit\":\"Submit\",\"close\":\"Close\",\"contact-form-success\":\"üéâ submit successed üéâ\",\"contact-form-errors\":\"sorryüòø\\nsomething's worng\",\"found-nothing\":\"nothing found...\",\"themeTitle\":\"Theme Mode\",\"dark\":\"dark\",\"light\":\"light\",\"languageTitle\":\"Language\",\"zh\":\"zh\",\"en\":\"en\",\"workInProgress\":\"Work In Progress\",\"image-source\":\"the image is from \",\"tags\":{\"name\":\"NAME\",\"what\":\"...\"}}","language":"en"}}]},"blog":{"frontmatter":{"title":"Using Google Sheet As Cloud Function","date":"2022-12-12T04:43:23.627Z","image_cover":"https://images.unsplash.com/photo-1600783245777-080fd7ff9253?fit=crop&w=1000&q=80","img_source":null},"html":"<h2>Use Google Spread Sheet To Execute Programs</h2>\n<p>Today I'm going to share a slack reminder bot\nThe bot part is just call slack webhooks\nI used to do this kind of schedule programs with google cloud function\nBut, because it cost money after the trial period passed\nSo I decide to change to google spread sheet to do this</p>\n<p>The user story is...\nAs a member of our company welfare commitee\nWe have to do the worship twice a month\n(do worship is kind of tradition for some of company in Taiwan)\nBut, it's hard to remember which date is the day\nIt calculated by lunar calendar\nAs an engineer, we can not waste our time on remember this thing\nSo I decide to make a slack reminder\nPlan is when the date is doing worship day, the bot will slack in our channel</p>\n<p>There are three main thing I used, let me introduce them</p>\n<ol>\n<li>Calculate the lunar date</li>\n<li>put code on <strong>google spread sheet</strong> and schedule them</li>\n<li>if it's the date! call <strong>slack webhook</strong></li>\n</ol>\n<div class=\"separate_line\" >...</div>\n<h2>Calculate the lunar date</h2>\n<p>This part I use <code>Intl.DateTimeFormat(ÂçÄÂüü).format(\"date\")</code>\nexample as following:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"js\" data-index=\"0\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">lunarDay</span><span class=\"mtk1\"> = </span><span class=\"mtk10\">Intl</span><span class=\"mtk1\">.</span><span class=\"mtk11\">DateTimeFormat</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;zh-TW-u-ca-chinese&quot;</span><span class=\"mtk1\">).</span><span class=\"mtk11\">format</span><span class=\"mtk1\">(</span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">Date</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;2022/12/12&quot;</span><span class=\"mtk1\">)); </span><span class=\"mtk3\">// &#39;2022Âπ¥ÂÜ¨Êúà19&#39;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\">// I only need the word after &quot;Êúà&quot;(month in chinese)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> [, </span><span class=\"mtk12\">todayOfLunarCalendar</span><span class=\"mtk1\">] = </span><span class=\"mtk12\">lunarDay</span><span class=\"mtk1\">.</span><span class=\"mtk11\">split</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;Êúà&quot;</span><span class=\"mtk1\">); </span><span class=\"mtk3\">// 19</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\">// some simple condition, if 1 or 15 we do worship</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk15\">if</span><span class=\"mtk1\">(</span><span class=\"mtk12\">todayOfLunarCalendar</span><span class=\"mtk1\"> === </span><span class=\"mtk8\">&quot;1&quot;</span><span class=\"mtk1\"> || </span><span class=\"mtk12\">todayOfLunarCalendar</span><span class=\"mtk1\"> === </span><span class=\"mtk8\">&#39;15&#39;</span><span class=\"mtk1\">){</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// send slack webhooks api</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span></code></pre>\n<p>lunar calendar refer from <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat\">MDN</a></p>\n<h2>Google Sheet With code and schedule</h2>\n<p>First, you need to open a new spread sheet\nOn the top tools, click <strong>Extensions</strong> -> <strong>App script</strong>\nAnd, here is where code are</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"js\" data-index=\"1\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\">// mostly is same as normal coding</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">reminder</span><span class=\"mtk1\"> () {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// conditions</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">todayOfLunarCalendar</span><span class=\"mtk1\"> === </span><span class=\"mtk8\">&quot;1&quot;</span><span class=\"mtk1\"> || </span><span class=\"mtk12\">todayOfLunarCalendar</span><span class=\"mtk1\"> === </span><span class=\"mtk8\">&quot;15&quot;</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk3\">// call slack api url will change to slack api later</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">UrlFetchApp</span><span class=\"mtk1\">.</span><span class=\"mtk11\">fetch</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;url&quot;</span><span class=\"mtk1\">, {...</span><span class=\"mtk12\">config</span><span class=\"mtk1\">})</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ContentService</span><span class=\"mtk1\">.</span><span class=\"mtk11\">createTextOutput</span><span class=\"mtk1\">(</span><span class=\"mtk10\">JSON</span><span class=\"mtk1\">.</span><span class=\"mtk11\">stringify</span><span class=\"mtk1\">({</span><span class=\"mtk12\">status:</span><span class=\"mtk7\">200</span><span class=\"mtk1\">, </span><span class=\"mtk12\">msg:</span><span class=\"mtk8\">&quot;success&quot;</span><span class=\"mtk1\">}))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\">// note 1Ôºö In App Script, wnat to use fetch, you need to use =&gt; UrlFetchApp.fetch</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\">// note 2Ôºö When return Response,use return ContentService.createTextOutput(JSON.stringify(result))</span></span></span></code></pre>\n<p>You can find funcstions of app script in <a href=\"https://developers.google.com/apps-script/overview\">docs</a></p>\n<h2>Use Slack api send messages</h2>\n<p>I use slack webhook to send message\nFirst of all, <a href=\"https://api.slack.com/messaging/webhooks\">Here</a> are the docs.\nYou need to create a new Apps first\nthen in <strong>Building Apps for Slack</strong> Area, choose „Äé Add features and functionality „Äè\nThen choose <strong>Incoming Webhooks</strong>, click <strong>Add New WEbhook Tto Workspace</strong>\nIt will create a URL, looks like: <code>https://hooks.slack.com/services/T1CXXXXXX/B04DXXXXXXX/gkXXXXXXXXXXXXXXX</code>\nYou can test it with postman</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"2\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">  method: POST </span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  Header: Content-type: application/json</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  body:   {&quot;text&quot;:&quot;Hello, World!&quot;}</span></span></code></pre>\n<h2>Google Sheet sets schedule</h2>\n<p>After slack part is done.\nBack to App script and replace slack api inside to UrlFetchApp.fetch url\n(Now you can test your function with Run button on the top)\nThen, left hand side, in the sidebar click the alarm-icon(Triggers)\nClick blur button: Add Trigger +\nAnd, adjust for the triggers you need\nFor example: I need that trigger once a week</p>\n<p>Select event source: <strong>Time-driven</strong>\nSelect type of time based trigger: <strong>Week timer</strong>\nSelect day of week: <strong>Every Monday</strong>\nSelect time of day: <strong>9am to 10am</strong></p>\n<p>If there are errors, it will notify you\nIf this is the first time of setting schedule\nApp Script will ask for permission to do this\nAfter confirmed, everything are set up</p>\n<div class=\"separate_line\" >...</div>\n<p>This time, I learned how to calculate in chinese lunar date ,\nUse google sheet as google cloud function\nI feel it convenient, and should not need to pay so far\nIf there's any mistakes, misunderstanding or unclear\nYou can leave a message for it, thank you!</p>\n<p>this is today's sharing üëã</p>\n<style class=\"grvsc-styles\">\n  .grvsc-container {\n    overflow: auto;\n    position: relative;\n    -webkit-overflow-scrolling: touch;\n    padding-top: 1rem;\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\n    padding-bottom: 1rem;\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\n    border-radius: 8px;\n    border-radius: var(--grvsc-border-radius, 8px);\n    font-feature-settings: normal;\n    line-height: 1.4;\n  }\n  \n  .grvsc-code {\n    display: table;\n  }\n  \n  .grvsc-line {\n    display: table-row;\n    box-sizing: border-box;\n    width: 100%;\n    position: relative;\n  }\n  \n  .grvsc-line > * {\n    position: relative;\n  }\n  \n  .grvsc-gutter-pad {\n    display: table-cell;\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  .grvsc-gutter {\n    display: table-cell;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter::before {\n    content: attr(data-content);\n  }\n  \n  .grvsc-source {\n    display: table-cell;\n    padding-left: 1.5rem;\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\n    padding-right: 1.5rem;\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\n  }\n  \n  .grvsc-source:empty::after {\n    content: ' ';\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter + .grvsc-source {\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  /* Line transformer styles */\n  \n  .grvsc-has-line-highlighting > .grvsc-code > .grvsc-line::before {\n    content: ' ';\n    position: absolute;\n    width: 100%;\n  }\n  \n  .grvsc-line-diff-add::before {\n    background-color: var(--grvsc-line-diff-add-background-color, rgba(0, 255, 60, 0.2));\n  }\n  \n  .grvsc-line-diff-del::before {\n    background-color: var(--grvsc-line-diff-del-background-color, rgba(255, 0, 20, 0.2));\n  }\n  \n  .grvsc-line-number {\n    padding: 0 2px;\n    text-align: right;\n    opacity: 0.7;\n  }\n  \n  .dark-default-dark {\n    background-color: #1E1E1E;\n    color: #D4D4D4;\n  }\n  .dark-default-dark .mtk1 { color: #D4D4D4; }\n  .dark-default-dark .mtk4 { color: #569CD6; }\n  .dark-default-dark .mtk12 { color: #9CDCFE; }\n  .dark-default-dark .mtk10 { color: #4EC9B0; }\n  .dark-default-dark .mtk11 { color: #DCDCAA; }\n  .dark-default-dark .mtk8 { color: #CE9178; }\n  .dark-default-dark .mtk3 { color: #6A9955; }\n  .dark-default-dark .mtk15 { color: #C586C0; }\n  .dark-default-dark .mtk7 { color: #B5CEA8; }\n  .dark-default-dark .grvsc-line-highlighted::before {\n    background-color: var(--grvsc-line-highlighted-background-color, rgba(255, 255, 255, 0.1));\n    box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, rgba(255, 255, 255, 0.5));\n  }\n</style>"}},"pageContext":{"language":"en","name":"how-to-use-google-sheet-as-cloud-function","i18n":{"language":"en","languages":["en","zh"],"defaultLanguage":"en","generateDefaultLanguagePage":false,"routed":false,"originalPath":"/blog/how-to-use-google-sheet-as-cloud-function","path":"/blog/how-to-use-google-sheet-as-cloud-function"}}},"staticQueryHashes":["3764592887"]}