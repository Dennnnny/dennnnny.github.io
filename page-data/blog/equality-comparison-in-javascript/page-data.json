{"componentChunkName":"component---src-templates-blog-index-tsx","path":"/blog/equality-comparison-in-javascript","result":{"data":{"locales":{"edges":[{"node":{"ns":"index","data":"{\"about\":\"About\",\"comments\":\"comments\",\"home\":\"home\",\"blog\":\"Blog\",\"project\":\"Project\",\"contact\":\"Contact\",\"contact-form-title\":\"Any feedback is welcome üôè\",\"contact-form-name\":\"Your Name\",\"contact-form-messages\":\"Anything You Want To Say\",\"submit\":\"Submit\",\"close\":\"Close\",\"contact-form-success\":\"üéâ submit successed üéâ\",\"contact-form-errors\":\"sorryüòø\\nsomething's worng\",\"found-nothing\":\"nothing found...\",\"themeTitle\":\"Theme Mode\",\"dark\":\"dark\",\"light\":\"light\",\"languageTitle\":\"Language\",\"zh\":\"zh\",\"en\":\"en\",\"workInProgress\":\"Work In Progress\",\"image-source\":\"the image is from unsplash\",\"tags\":{\"name\":\"NAME\",\"what\":\"...\"}}","language":"en"}},{"node":{"ns":"tags","data":"{\"filter-tags\":\"find the post by title/tags\",\"javascript\":\"javascript\",\"note\":\"note\",\"gatsby\":\"gatsby\",\"typescript\":\"typescript\",\"series\":\"series\"}","language":"en"}}]},"blog":{"frontmatter":{"title":"Comparison In Javascript","date":"2022-10-19T13:28:52.670Z","image_cover":"https://images.unsplash.com/photo-1517694712202-14dd9538aa97?fit=crop&w=1000&q=80"},"html":"<h1>Comparison in Javascript</h1>\n<p>I read some article about basic javascript recently,<br>\nand having more understading of the concept of „Äécomparison„Äè</p>\n<p>In javascript, the symbol „Äé = „Äè have two usages</p>\n<p>First one is to given a value of a variable,<br>\nsuch as: let x = 1</p>\n<p>Second one is compaison,<br>\nand there are two compare in javascript,<br>\nstrict equality (a.k.a. ===), loose equality (a.k.a. ==)<br>\nthe difference between these two is</p>\n<p>in strict equality(===)<br>\ncompare only when two type are the same,<br>\nif operands are same type and having same value or reference the same object.<br>\nit'll return true\nor return false</p>\n<p>However; in loose equality (==)<br>\njavascript do the coercion behind you<br>\nthe coercion will transform two different type to the same one then do the compare<br>\ntherefore, sometimes weird things happened.<br>\nfor example as following:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"js\" data-index=\"0\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">[</span><span class=\"mtk7\">0</span><span class=\"mtk1\">] == </span><span class=\"mtk8\">&quot;&quot;</span><span class=\"mtk1\">; </span><span class=\"mtk3\">//false</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">[</span><span class=\"mtk7\">0</span><span class=\"mtk1\">] == </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk3\">//true</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">[</span><span class=\"mtk8\">&quot;&quot;</span><span class=\"mtk1\">] == </span><span class=\"mtk8\">&quot;&quot;</span><span class=\"mtk1\">; </span><span class=\"mtk3\">//true</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">[</span><span class=\"mtk8\">&quot;&quot;</span><span class=\"mtk1\">] == </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk3\">//true;</span></span></span></code></pre>\n<p>How come [0] == '' is false, but others are true<br>\nwhen you know what javascript doing, it will be no more confusing</p>\n<p>So, what javascript doing behind base on some rules<br>\nAccording to <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Equality\">this documents from MDN</a><br>\nRoughly speaking, javascript try to change two type the same by rules:</p>\n<ul>\n<li>When same type in comparison</li>\n</ul>\n<p>Same type compare <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Equality#description\">reference here</a></p>\n<ul>\n<li>When Two type in comparison</li>\n</ul>\n<ol>\n<li>\n<p>Object vs Primitive<br>\n=> try turning Object into Primitive<br>\n=> by doing these methods in order : valueOf() or toString()<br>\n=> if valueOf() doesn't become Primitive, then use toString()</p>\n</li>\n<li>\n<p>Primitive(Boolean) vs Prmitive(rest Primitive like: String, Number)<br>\n=> trun Boolean into Number,<br>\n<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number#number_coercion\">refernce here</a></p>\n</li>\n<li>\n<p>Primitive(String) vs Primitive(Number)<br>\n=> turn String into Number<br>\n<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number#number_coercion\">reference here</a></p>\n</li>\n</ol>\n<p>as earlier example</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"js\" data-index=\"1\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">//1.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">[</span><span class=\"mtk7\">0</span><span class=\"mtk1\">] == </span><span class=\"mtk8\">&quot;&quot;</span><span class=\"mtk1\">; </span><span class=\"mtk3\">//object vs string</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// because [0].valueOf() still[0] so changing method : toString()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">&quot;[0]&quot;</span><span class=\"mtk1\"> == </span><span class=\"mtk8\">&quot;&quot;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// then compare two String type, equal to false</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">//2.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">[</span><span class=\"mtk7\">0</span><span class=\"mtk1\">] == </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk3\">// object cs number</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// as above üëÜ</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">&quot;[0]&quot;</span><span class=\"mtk1\"> == </span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// then do String to Number : &quot;[0]&quot; -&gt; NaN,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">NaN</span><span class=\"mtk1\"> == </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk3\">//  false</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// rest of questions can using the same logic to figure it out</span></span></span></code></pre>\n<p>when I read again of an <a href=\"https://ithelp.ithome.com.tw/articles/10191254\">article of iThome blog</a><br>\nI find that I have a little bit more understanding about javascript<br>\nor, I think I just didn't know javascript well before<br>\nhope that I can do better, making some progress</p>\n<p>this is today's sharing üëã</p>\n<style class=\"grvsc-styles\">\n  .grvsc-container {\n    overflow: auto;\n    position: relative;\n    -webkit-overflow-scrolling: touch;\n    padding-top: 1rem;\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\n    padding-bottom: 1rem;\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\n    border-radius: 8px;\n    border-radius: var(--grvsc-border-radius, 8px);\n    font-feature-settings: normal;\n    line-height: 1.4;\n  }\n  \n  .grvsc-code {\n    display: table;\n  }\n  \n  .grvsc-line {\n    display: table-row;\n    box-sizing: border-box;\n    width: 100%;\n    position: relative;\n  }\n  \n  .grvsc-line > * {\n    position: relative;\n  }\n  \n  .grvsc-gutter-pad {\n    display: table-cell;\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  .grvsc-gutter {\n    display: table-cell;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter::before {\n    content: attr(data-content);\n  }\n  \n  .grvsc-source {\n    display: table-cell;\n    padding-left: 1.5rem;\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\n    padding-right: 1.5rem;\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\n  }\n  \n  .grvsc-source:empty::after {\n    content: ' ';\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter + .grvsc-source {\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  /* Line transformer styles */\n  \n  .grvsc-has-line-highlighting > .grvsc-code > .grvsc-line::before {\n    content: ' ';\n    position: absolute;\n    width: 100%;\n  }\n  \n  .grvsc-line-diff-add::before {\n    background-color: var(--grvsc-line-diff-add-background-color, rgba(0, 255, 60, 0.2));\n  }\n  \n  .grvsc-line-diff-del::before {\n    background-color: var(--grvsc-line-diff-del-background-color, rgba(255, 0, 20, 0.2));\n  }\n  \n  .grvsc-line-number {\n    padding: 0 2px;\n    text-align: right;\n    opacity: 0.7;\n  }\n  \n  .dark-default-dark {\n    background-color: #1E1E1E;\n    color: #D4D4D4;\n  }\n  .dark-default-dark .mtk1 { color: #D4D4D4; }\n  .dark-default-dark .mtk7 { color: #B5CEA8; }\n  .dark-default-dark .mtk8 { color: #CE9178; }\n  .dark-default-dark .mtk3 { color: #6A9955; }\n  .dark-default-dark .mtk4 { color: #569CD6; }\n  .dark-default-dark .grvsc-line-highlighted::before {\n    background-color: var(--grvsc-line-highlighted-background-color, rgba(255, 255, 255, 0.1));\n    box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, rgba(255, 255, 255, 0.5));\n  }\n</style>"}},"pageContext":{"language":"en","name":"equality-comparison-in-javascript","i18n":{"language":"en","languages":["en","zh"],"defaultLanguage":"en","generateDefaultLanguagePage":false,"routed":false,"originalPath":"/blog/equality-comparison-in-javascript","path":"/blog/equality-comparison-in-javascript"}}},"staticQueryHashes":["3764592887"]}