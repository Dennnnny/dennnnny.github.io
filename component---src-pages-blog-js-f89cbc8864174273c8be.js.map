{"version":3,"file":"component---src-pages-blog-js-f89cbc8864174273c8be.js","mappings":"yLAKMA,EAASC,EAAAA,QAAAA,IAAAA,WAAsB,CAAEC,YAAa,gBAAxC,mEAAGD,CAAH,wvBAMiBE,EAAAA,GAAAA,YAWZ,qBAAGC,MAAkBC,UAArB,IAiBJ,qBAAGD,MAAkBE,SAArB,IAQA,qBAAGF,MAAkBE,SAArB,GAKFC,EAAAA,GAAAA,QAMQ,kCAAGC,YAAH,GAmBRD,EAAAA,GAAAA,QAgBI,SAASE,EAAT,GAAyB,IAATC,EAAQ,EAARA,KACrBC,EAAyCD,EAAzCC,YAAaC,EAA4BF,EAA5BE,MAAOC,EAAqBH,EAArBG,KAAMC,EAAeJ,EAAfI,KAAMC,EAASL,EAATK,KAElCC,EAAqB,CACzBC,KAAMd,EAAAA,GAAAA,IACNe,QAASf,EAAAA,GAAAA,MAGX,OACE,gBAACH,EAAD,CAAQQ,aAAcQ,EAAmBD,IAAS,SAChD,gBAAC,KAAD,CAAMI,GAAIN,GACR,uBAAKO,IAAI,aAAaC,IAAKV,EAAaW,UAAU,cAClD,uBAAKA,UAAU,QAAQR,EAAKS,MAAM,KAAK,IACvC,uBAAKD,UAAU,cAAcV,IAIpC,C,yICzGKZ,EAASC,EAAAA,QAAAA,IAAAA,WAAsB,CAAEC,YAAa,gBAAxC,mEAAGD,CAAH,oMAIDM,EAAAA,GAAAA,OAIAA,EAAAA,GAAAA,QAMI,SAASiB,EAAT,GAA8B,IAAD,IAAbC,KAAAA,OAAa,MAAN,GAAM,EAC1C,OACE,gBAACzB,EAAD,KACGyB,EAAKC,KAAI,SAACC,EAAMC,GACf,IAAMC,EAAYF,EAAKG,YACvB,OAAO,gBAACrB,EAAA,EAAD,CAAMsB,IAAKH,EAAOlB,KAAMmB,GAChC,IAGN,CCvBD,IAAM7B,EAASC,EAAAA,QAAAA,KAAAA,WAAH,wDAAGA,CAAH,mBAIG,SAAS+B,EAAT,GAEX,IAGAC,EAHD,EADDvB,KAEQwB,kBAEND,MAKF,OACE,gBAAC,EAAD,KACE,gBAACT,EAAD,CAAMC,KAAMQ,IAGjB,CACM,IAmBME,EAAO,kBAAM,gDAAN,C","sources":["webpack://Dennnnny.io/./src/components/Post/index.js","webpack://Dennnnny.io/./src/components/page/Blog/index.js","webpack://Dennnnny.io/./src/pages/blog.js"],"sourcesContent":["import * as React from \"react\";\nimport { Link } from \"gatsby\";\nimport styled from \"styled-components\";\nimport { colors, device } from \"@layouts/styleConfig\";\n\nconst Layout = styled.div.withConfig({ componentId: \"Post_Layout\" })`\n  background-color: transparent;\n\n  grid-column: span 4 / span 4;\n  margin: 1rem 1.5rem;\n  padding-bottom: 8px;\n  border-bottom: 1px solid ${colors.lightWhite};\n\n  a {\n    text-decoration: none;\n    /* color: ${colors.white}; */\n    width: 100%;\n    transition: 0.3s;\n\n    :hover {\n      & .date,\n      .post_title {\n        color: ${({ theme }) => theme.hoverColor};\n      }\n    }\n  }\n\n  img {\n    border-radius: 12px;\n    width: 100%;\n    height: 150px;\n    object-fit: cover;\n    position: relative;\n    transition: 0.3s;\n  }\n\n  .date {\n    margin-top: 8px;\n    font-size: 16px;\n    color: ${({ theme }) => theme.postColor};\n    transition: 0.3s;\n  }\n\n  .post_title {\n    margin-top: 4px;\n    font-size: 20px;\n    font-weight: 700;\n    color: ${({ theme }) => theme.postColor};\n    overflow-wrap: break-word;\n    transition: 0.3s;\n  }\n\n  @media ${device.tablet} {\n    padding-bottom: 0;\n    border-bottom: none;\n\n    :hover {\n      img {\n        outline: ${({ outlineColor }) => `2px solid  ${outlineColor}`};\n        outline-offset: 2px;\n      }\n    }\n\n    img {\n      height: 200px;\n    }\n\n    .date {\n      margin-top: 8px;\n      font-size: 18px;\n    }\n\n    .post_title {\n      font-size: 26px;\n    }\n  }\n\n  @media ${device.laptop} {\n    img {\n      height: 250px;\n    }\n\n    .date {\n      margin-top: 8px;\n      font-size: 20px;\n    }\n\n    .post_title {\n      font-size: 30px;\n    }\n  }\n`;\n\nexport default function Post({ data }) {\n  const { image_cover, title, path, date, type } = data;\n\n  const outlineColorConfig = {\n    blog: colors.red,\n    project: colors.blue,\n  };\n\n  return (\n    <Layout outlineColor={outlineColorConfig[type] || \"white\"}>\n      <Link to={path}>\n        <img alt=\"post_cover\" src={image_cover} className=\"img_cover\" />\n        <div className=\"date\">{date.split(\"T\")[0]}</div>\n        <div className=\"post_title\">{title}</div>\n      </Link>\n    </Layout>\n  );\n}\n","import * as React from \"react\";\nimport styled from \"styled-components\";\nimport Post from \"@components/Post\";\nimport { device } from \"@layouts/styleConfig\";\n\nconst Layout = styled.div.withConfig({ componentId: \"Blog_Layout\" })`\n  display: grid;\n  grid-template-columns: repeat(4, minmax(0, 1fr));\n\n  @media ${device.tablet} {\n    grid-template-columns: repeat(8, minmax(0, 1fr));\n  }\n\n  @media ${device.laptop} {\n    margin: 0 10rem;\n    grid-template-columns: repeat(12, minmax(0, 1fr));\n  }\n`;\n\nexport default function Blog({ list = [] }) {\n  return (\n    <Layout>\n      {list.map((post, index) => {\n        const POST_DATA = post.frontmatter;\n        return <Post key={index} data={POST_DATA} />;\n      })}\n    </Layout>\n  );\n}\n","import * as React from \"react\";\nimport styled from \"styled-components\";\nimport { graphql } from \"gatsby\";\nimport Blog from \"@components/page/Blog\";\n\nconst Layout = styled.main`\n  padding: 32px;\n`;\n\nexport default function BlogList({\n  data, // this prop will be injected by the GraphQL query below.\n}) {\n  const { allMarkdownRemark } = data; // data.allMarkdownRemark holds your post data\n  const {\n    nodes,\n    // totalCount\n  } = allMarkdownRemark;\n  // console.log({ nodes });\n\n  return (\n    <Layout>\n      <Blog list={nodes} />\n    </Layout>\n  );\n}\nexport const pageQuery = graphql`\n  query MyBlogQuery {\n    allMarkdownRemark(\n      sort: { order: DESC, fields: frontmatter___date }\n      filter: { frontmatter: { path: { regex: \"/blog/\" } } }\n    ) {\n      totalCount\n      nodes {\n        frontmatter {\n          path\n          title\n          date\n          image_cover\n          type\n        }\n      }\n    }\n  }\n`;\nexport const Head = () => <title>Dennnnny.io|Blog</title>;\n"],"names":["Layout","styled","componentId","colors","theme","hoverColor","postColor","device","outlineColor","Post","data","image_cover","title","path","date","type","outlineColorConfig","blog","project","to","alt","src","className","split","Blog","list","map","post","index","POST_DATA","frontmatter","key","BlogList","nodes","allMarkdownRemark","Head"],"sourceRoot":""}