{"version":3,"file":"component---src-pages-markdown-remark-frontmatter-slug-js-d0cfac9c0a300cc24271.js","mappings":"6LAGaA,GAAQC,EAAAA,EAAAA,KAAH,qjBAWLC,EAAAA,GAAAA,MAoBAA,EAAAA,GAAAA,MAKWA,EAAAA,GAAAA,MAKAA,EAAAA,GAAAA,SAYXA,EAAAA,GAAAA,KAIFC,EAAAA,GAAAA,QC1DI,SAASC,IACtB,IAAMC,EAAcC,EAAAA,OAAa,MAqBjC,OApBAA,EAAAA,WAAgB,WACd,IAAMC,EAASC,SAASC,cAAc,UAatC,OAZAF,EAAOG,IAAM,gCACbH,EAAOI,aAAa,OAAQ,wCAC5BJ,EAAOI,aAAa,aAAc,YAClCJ,EAAOI,aAAa,QAAS,QAC7BJ,EAAOI,aAAa,QAAS,eAC7BJ,EAAOI,aAAa,cAAe,aACnCJ,EAAOK,OAAQ,EAEXP,EAAYQ,SACdR,EAAYQ,QAAQC,YAAYP,GAG3B,WACDF,EAAYQ,UACdR,EAAYQ,QAAQE,UAAY,GAEnC,CACF,GAAE,IACI,uBAAKC,IAAKX,GAClB,CCnBD,IAAMY,EAASC,EAAAA,QAAAA,IAAAA,WAAsB,CAAEC,YAAa,oBAAxC,qEAAGD,CAAH,s2BAIDhB,EAAAA,GAAAA,MAUEA,EAAAA,GAAAA,UAeAA,EAAAA,GAAAA,WACPF,EAIwBE,EAAAA,GAAAA,KAMnBC,EAAAA,GAAAA,OAyBAA,EAAAA,GAAAA,QAwBI,SAASiB,EAAT,GAA6B,IAATC,EAAQ,EAARA,KAE/BC,EAMED,EANFC,MACAC,EAKEF,EALFE,KACAC,EAIEH,EAJFG,YAGAC,EACEJ,EADFI,KAEF,OACE,gBAACR,EAAD,KACE,uBAAKS,UAAU,cAAcJ,GAC7B,uBAAKI,UAAU,aAAaH,GAC5B,uBAAKb,IAAKc,EAAaG,IAAKL,IAC5B,uBACEI,UAAU,eACVE,wBAAyB,CAAEC,OAAQJ,KAErC,uBAAKC,UAAU,iBACb,gBAACtB,EAAD,OAIP,CChHD,IAAMa,EAASC,EAAAA,QAAAA,IAAAA,WAAsB,CAAEC,YAAa,uBAAxC,yEAAGD,CAAH,s2BAIDhB,EAAAA,GAAAA,MAUEA,EAAAA,GAAAA,UAeAA,EAAAA,GAAAA,WACPF,EAIwBE,EAAAA,GAAAA,KAMnBC,EAAAA,GAAAA,OAyBAA,EAAAA,GAAAA,QAwBI,SAAS2B,EAAT,GAAgC,IAATT,EAAQ,EAARA,KAElCC,EAMED,EANFC,MACAC,EAKEF,EALFE,KACAC,EAIEH,EAJFG,YAGAC,EACEJ,EADFI,KAEF,OACE,gBAAC,EAAD,KACE,uBAAKC,UAAU,cAAcJ,GAC7B,uBAAKI,UAAU,aAAaH,GAC5B,uBAAKb,IAAKc,EAAaG,IAAKL,IAC5B,uBACEI,UAAU,eACVE,wBAAyB,CAAEC,OAAQJ,KAErC,uBAAKC,UAAU,iBACb,gBAACtB,EAAD,OAIP,CCjHc,SAAS2B,EAAT,GAEX,IACMC,EADP,EADDX,KAEQW,eACAC,EAAsBD,EAAtBC,YAAaR,EAASO,EAATP,KACbS,EAASD,EAATC,KAOR,MALmB,CACjBC,KAAM,gBAACf,EAAD,CAAUC,KAAI,iBAAOY,EAAP,CAAoBR,KAAAA,MACxCW,QAAS,gBAACN,EAAD,CAAaT,KAAI,iBAAOY,EAAP,CAAoBR,KAAAA,OAG9BS,EACnB,C","sources":["webpack://Dennnnny.io/./src/layouts/mdCss.js","webpack://Dennnnny.io/./src/components/Comments/index.js","webpack://Dennnnny.io/./src/components/page/BlogPost/index.js","webpack://Dennnnny.io/./src/components/page/ProjectPost/index.js","webpack://Dennnnny.io/./src/pages/{MarkdownRemark.frontmatter__slug}.js"],"sourcesContent":["import { css } from \"styled-components\";\nimport { colors, device } from \"./styleConfig\";\n\nexport const mdCss = css`\n  > * {\n    margin-top: 24px;\n  }\n\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6 {\n    color: ${colors.white};\n  }\n\n  h1 {\n    font-size: 24px;\n    font-weight: 600;\n  }\n\n  h2 {\n    font-size: 24px;\n  }\n\n  p {\n    line-height: 150%;\n    font-size: 16px;\n  }\n\n  blockquote {\n    border: none;\n    border-radius: 0.5rem;\n    color: ${colors.white};\n    font-style: italic;\n    font-weight: 400;\n    margin: 2.5rem 0;\n    padding: 1rem;\n    background-color: ${colors.black};\n    overflow-wrap: anywhere;\n  }\n\n  pre {\n    background-color: ${colors.deepBlue};\n    border-radius: 8px;\n    font-size: 1em;\n    font-weight: 400;\n    line-height: 1.7142857;\n\n    overflow-x: auto;\n    padding: 1.5rem;\n  }\n\n  a {\n    text-decoration: none;\n    color: ${colors.blue};\n    margin: 0 4px;\n  }\n\n  @media ${device.tablet} {\n    h1 {\n      font-size: 28px;\n    }\n    h2 {\n      font-size: 24px;\n    }\n    p {\n      line-height: 150%;\n      font-size: 18px;\n    }\n  }\n`;\n","import * as React from \"react\";\n\nexport default function Comments() {\n  const commentsRef = React.useRef(null);\n  React.useEffect(() => {\n    const script = document.createElement(\"script\");\n    script.src = \"https://utteranc.es/client.js\";\n    script.setAttribute(\"repo\", \"Dennnnny/dennnnny.github.io.comments\");\n    script.setAttribute(\"issue-term\", \"pathname\");\n    script.setAttribute(\"label\", \"âœ¨ðŸ’¬âœ¨\");\n    script.setAttribute(\"theme\", \"github-dark\");\n    script.setAttribute(\"crossorigin\", \"anonymous\");\n    script.async = true;\n\n    if (commentsRef.current) {\n      commentsRef.current.appendChild(script);\n    }\n\n    return () => {\n      if (commentsRef.current) {\n        commentsRef.current.innerHTML = \"\";\n      }\n    };\n  }, []);\n  return <div ref={commentsRef} />;\n}\n","import * as React from \"react\";\nimport styled from \"styled-components\";\nimport { mdCss } from \"@layouts/mdCss\";\nimport { colors, device } from \"@layouts/styleConfig\";\nimport Comments from \"@components/Comments\";\n\nconst Layout = styled.div.withConfig({ componentId: \"BlogPost_Layout\" })`\n  display: grid;\n  grid-template-columns: repeat(12, minmax(0, 1fr));\n  padding: 32px 16px;\n  color: ${colors.white};\n\n  .post-title {\n    font-size: 32px;\n    font-weight: 800;\n    grid-column-start: 3;\n    grid-column: 1/-1;\n  }\n  .post-date {\n    grid-column: 1/-1;\n    color: ${colors.darkWhite};\n    margin-top: 8px;\n  }\n\n  img {\n    grid-column: 1/-1;\n    width: 100%;\n    height: 200px;\n    object-fit: cover;\n    margin-top: 24px;\n    border-radius: 16px;\n  }\n\n  .post-content {\n    grid-column: 1/-1;\n    color: ${colors.lightWhite};\n    ${mdCss};\n  }\n\n  .post-comments {\n    border-top: 0.5px solid ${colors.dark};\n    margin-top: 32px;\n    padding-top: 16px;\n    grid-column: 1/-1;\n  }\n\n  @media ${device.tablet} {\n    .post-title {\n      grid-column: 2/-2;\n      font-size: 36px;\n    }\n    .post-date {\n      grid-column: 2/-2;\n    }\n\n    img {\n      grid-column: 2/-2;\n      height: 300px;\n    }\n\n    .post-content {\n      grid-column: 2/-2;\n    }\n\n    .post-comments {\n      margin-top: 64px;\n      padding-top: 32px;\n      grid-column: 2/-2;\n    }\n  }\n\n  @media ${device.laptop} {\n    .post-title {\n      grid-column: 3/-3;\n      font-size: 40px;\n    }\n    .post-date {\n      grid-column: 3/-3;\n    }\n\n    img {\n      grid-column: 3/-3;\n      height: 400px;\n    }\n\n    .post-content {\n      grid-column: 3/-3;\n    }\n\n    .post-comments {\n      grid-column: 3/-3;\n    }\n  }\n`;\n\nexport default function BlogPost({ data }) {\n  const {\n    title,\n    date,\n    image_cover,\n    // tags,\n    // type,\n    html,\n  } = data;\n  return (\n    <Layout>\n      <div className=\"post-title\">{title}</div>\n      <div className=\"post-date\">{date}</div>\n      <img src={image_cover} alt={title} />\n      <div\n        className=\"post-content\"\n        dangerouslySetInnerHTML={{ __html: html }}\n      />\n      <div className=\"post-comments\">\n        <Comments />\n      </div>\n    </Layout>\n  );\n}\n","import * as React from \"react\";\nimport styled from \"styled-components\";\nimport { mdCss } from \"@layouts/mdCss\";\nimport { colors, device } from \"@layouts/styleConfig\";\nimport Comments from \"@components/Comments\";\n\nconst Layout = styled.div.withConfig({ componentId: \"ProjectPost_Layout\" })`\n  display: grid;\n  grid-template-columns: repeat(12, minmax(0, 1fr));\n  padding: 32px 16px;\n  color: ${colors.white};\n\n  .post-title {\n    font-size: 32px;\n    font-weight: 800;\n    grid-column-start: 3;\n    grid-column: 1/-1;\n  }\n  .post-date {\n    grid-column: 1/-1;\n    color: ${colors.darkWhite};\n    margin-top: 8px;\n  }\n\n  img {\n    grid-column: 1/-1;\n    width: 100%;\n    height: 200px;\n    object-fit: cover;\n    margin-top: 24px;\n    border-radius: 16px;\n  }\n\n  .post-content {\n    grid-column: 1/-1;\n    color: ${colors.lightWhite};\n    ${mdCss};\n  }\n\n  .post-comments {\n    border-top: 0.5px solid ${colors.dark};\n    margin-top: 32px;\n    padding-top: 16px;\n    grid-column: 1/-1;\n  }\n\n  @media ${device.tablet} {\n    .post-title {\n      grid-column: 2/-2;\n      font-size: 36px;\n    }\n    .post-date {\n      grid-column: 2/-2;\n    }\n\n    img {\n      grid-column: 2/-2;\n      height: 300px;\n    }\n\n    .post-content {\n      grid-column: 2/-2;\n    }\n\n    .post-comments {\n      margin-top: 64px;\n      padding-top: 32px;\n      grid-column: 2/-2;\n    }\n  }\n\n  @media ${device.laptop} {\n    .post-title {\n      grid-column: 3/-3;\n      font-size: 40px;\n    }\n    .post-date {\n      grid-column: 3/-3;\n    }\n\n    img {\n      grid-column: 3/-3;\n      height: 400px;\n    }\n\n    .post-content {\n      grid-column: 3/-3;\n    }\n\n    .post-comments {\n      grid-column: 3/-3;\n    }\n  }\n`;\n\nexport default function ProjectPost({ data }) {\n  const {\n    title,\n    date,\n    image_cover,\n    // type,\n    // tags,\n    html,\n  } = data;\n  return (\n    <Layout>\n      <div className=\"post-title\">{title}</div>\n      <div className=\"post-date\">{date}</div>\n      <img src={image_cover} alt={title} />\n      <div\n        className=\"post-content\"\n        dangerouslySetInnerHTML={{ __html: html }}\n      />\n      <div className=\"post-comments\">\n        <Comments />\n      </div>\n    </Layout>\n  );\n}\n","import React from \"react\";\nimport { graphql } from \"gatsby\";\nimport BlogPost from \"@components/page/BlogPost\";\nimport ProjectPost from \"@components/page/ProjectPost\";\n\nexport default function Template({\n  data, // this prop will be injected by the GraphQL query below.\n}) {\n  const { markdownRemark } = data; // data.markdownRemark holds your post data\n  const { frontmatter, html } = markdownRemark;\n  const { type } = frontmatter;\n\n  const renderPost = {\n    blog: <BlogPost data={{ ...frontmatter, html }} />,\n    project: <ProjectPost data={{ ...frontmatter, html }} />,\n  };\n\n  return renderPost[type];\n}\nexport const pageQuery = graphql`\n  query ($id: String!) {\n    markdownRemark(id: { eq: $id }) {\n      html\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        slug\n        title\n        type\n        image_cover\n      }\n    }\n  }\n`;\n"],"names":["mdCss","css","colors","device","Comments","commentsRef","React","script","document","createElement","src","setAttribute","async","current","appendChild","innerHTML","ref","Layout","styled","componentId","BlogPost","data","title","date","image_cover","html","className","alt","dangerouslySetInnerHTML","__html","ProjectPost","Template","markdownRemark","frontmatter","type","blog","project"],"sourceRoot":""}