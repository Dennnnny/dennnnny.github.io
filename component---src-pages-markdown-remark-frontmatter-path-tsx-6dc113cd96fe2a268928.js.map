{"version":3,"file":"component---src-pages-markdown-remark-frontmatter-path-tsx-6dc113cd96fe2a268928.js","mappings":"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","sources":["webpack://Dennnnny.io/./src/components/Container/seoContainer.tsx","webpack://Dennnnny.io/./src/tool/functions.ts","webpack://Dennnnny.io/./src/tool/useSiteMetadata.ts","webpack://Dennnnny.io/./src/pages/404.tsx","webpack://Dennnnny.io/./src/layouts/mdCss.ts","webpack://Dennnnny.io/./src/components/Comments/index.tsx","webpack://Dennnnny.io/./src/components/page/PostContent/index.tsx","webpack://Dennnnny.io/./src/pages/{MarkdownRemark.frontmatter__path}.tsx"],"sourcesContent":["import React from \"react\";\nimport { useSiteMetadata } from \"@tool/useSiteMetadata\";\nimport { capitalizeFirstLetter } from \"@tool/functions\";\n\ntype SeoContainerType = {\n  title?: string;\n  description?: string;\n  pathname?: string;\n  subtitle?: string | null;\n  children?: React.ReactNode;\n};\n\nexport const SeoContainer = ({\n  title,\n  description,\n  pathname,\n  subtitle = null,\n  children,\n}: SeoContainerType) => {\n  const {\n    title: defaultTitle,\n    description: defaultDescription,\n    siteUrl,\n  } = useSiteMetadata();\n\n  const seo = {\n    title: title || defaultTitle,\n    description: description || defaultDescription,\n    url: `${siteUrl}${pathname || ``}`,\n    // twitterUsername,\n  };\n\n  const seoTitle = subtitle\n    ? `${seo.title}|${capitalizeFirstLetter(subtitle)}`\n    : seo.title;\n\n  return (\n    <>\n      <title>{seoTitle}</title>\n      <meta name=\"description\" content={seo.description} />\n      {/* <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:title\" content={seo.title} />\n      <meta name=\"twitter:url\" content={seo.url} />\n      <meta name=\"twitter:description\" content={seo.description} />\n      <meta name=\"twitter:image\" content={seo.image} />\n      <meta name=\"twitter:creator\" content={seo.twitterUsername} /> */}\n      <link\n        rel=\"icon\"\n        href=\"data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 100 100'><text y='0.9em' font-size='90'>‚òÄÔ∏è</text></svg>\"\n      />\n      {children}\n    </>\n  );\n};\n","export function capitalizeFirstLetter(string: string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n","import { graphql, useStaticQuery } from \"gatsby\";\n\nexport const useSiteMetadata = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      site {\n        siteMetadata {\n          title\n          description\n          siteUrl\n        }\n      }\n    }\n  `);\n\n  return data.site.siteMetadata;\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { SeoContainer } from \"@components/Container/seoContainer\";\n\nconst Layout = styled.div.withConfig({ componentId: \"NotFoundPage_Layout\" })`\n  .main-body {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n`;\n\nconst NotFoundPage = () => {\n  return <Layout>Page not found</Layout>;\n};\n\nexport default NotFoundPage;\n\nexport const Head = () => <SeoContainer title=\"Oops ... not found\" />;\n","import { css } from \"styled-components\";\nimport { colors, device } from \"./styleConfig\";\n\nexport const mdCss = css`\n  > * {\n    margin-top: 24px;\n  }\n\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6 {\n    color: ${({ theme }) => theme.color};\n    font-weight: 600;\n  }\n\n  h1 {\n    font-size: 24px;\n\n    position: relative;\n    width: max-content;\n    z-index: 0;\n\n    ::after {\n      content: \"\";\n      width: 100%;\n      height: 30%;\n      position: absolute;\n      bottom: 0px;\n      left: 0px;\n      background-image: linear-gradient(\n        to left,\n        ${colors.gradientPurple},\n        ${colors.gradientRed}\n      );\n      z-index: -1;\n      transform: rotateZ(-1deg);\n    }\n  }\n\n  h2 {\n    font-size: 24px;\n  }\n\n  h3 {\n    font-size: 22px;\n  }\n\n  p {\n    line-height: 150%;\n    font-size: 16px;\n\n    > code {\n      color: ${({ theme }) => theme.color};\n      background: ${({ theme }) => theme.overlayColor};\n      border-radius: 5px;\n      padding: 4px 12px;\n      margin: 4px 0;\n      display: inline-block;\n    }\n  }\n\n  blockquote {\n    border: none;\n    border-radius: 0.5rem;\n    color: ${({ theme }) => theme.color};\n    font-style: italic;\n    font-weight: 400;\n    margin: 2.5rem 0;\n    padding: 1rem;\n    background-color: ${({ theme }) => theme.qColor};\n    overflow-wrap: anywhere;\n  }\n\n  pre {\n    background-color: ${colors.deepBlue};\n    border-radius: 8px;\n    font-size: 1em;\n    font-weight: 400;\n    line-height: 1.7142857;\n\n    overflow-x: auto;\n    padding: 1.5rem;\n  }\n\n  a {\n    text-decoration: none;\n    color: ${colors.blue};\n    margin: 0 4px;\n  }\n\n  @media ${device.tablet} {\n    h1 {\n      font-size: 28px;\n    }\n    h2 {\n      font-size: 24px;\n    }\n    p {\n      line-height: 150%;\n      font-size: 18px;\n    }\n  }\n`;\n","import React, { useEffect, useRef } from \"react\";\nimport { useTheme } from \"styled-components\";\n\nexport default function Comments() {\n  const commentsRef = useRef<HTMLDivElement>(null);\n  const theme = useTheme();\n\n  const githubTheme = theme?.type || \"dark\";\n\n  useEffect(() => {\n    const script = document.createElement(\"script\");\n    script.src = \"https://utteranc.es/client.js\";\n    script.setAttribute(\"repo\", \"Dennnnny/dennnnny.github.io.comments\");\n    script.setAttribute(\"issue-term\", \"pathname\");\n    script.setAttribute(\"label\", \"‚ú®üí¨‚ú®\");\n    script.setAttribute(\"theme\", `github-${githubTheme}`);\n    script.setAttribute(\"crossorigin\", \"anonymous\");\n    script.async = true;\n\n    const COMMENT_REF = commentsRef.current;\n\n    if (COMMENT_REF) {\n      COMMENT_REF.appendChild(script);\n    }\n\n    return () => {\n      if (COMMENT_REF) {\n        COMMENT_REF.innerHTML = \"\";\n      }\n    };\n  }, [githubTheme]);\n  return <div ref={commentsRef} />;\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { mdCss } from \"@layouts/mdCss\";\nimport { device } from \"@layouts/styleConfig\";\nimport Comments from \"@components/Comments\";\nimport { MdFrontMatter } from \"@tool/types\";\n\ntype BlogPostPropTypes = {\n  data: MdFrontMatter;\n};\n\nconst Layout = styled.div.withConfig({ componentId: \"BlogPost_Layout\" })`\n  display: grid;\n  grid-template-columns: repeat(12, minmax(0, 1fr));\n  padding: 32px 16px;\n  color: ${({ theme }) => theme.color};\n  .post-title {\n    font-size: 32px;\n    font-weight: 800;\n    grid-column-start: 3;\n    grid-column: 1/-1;\n  }\n  .post-date {\n    grid-column: 1/-1;\n    color: ${({ theme }) => theme.postColor};\n    margin-top: 8px;\n  }\n\n  img {\n    grid-column: 1/-1;\n    width: 100%;\n    height: 200px;\n    object-fit: cover;\n    margin-top: 24px;\n    border-radius: 16px;\n  }\n\n  .post-content {\n    grid-column: 1/-1;\n    color: ${({ theme }) => theme.contentColor};\n    ${mdCss};\n  }\n\n  .post-comments {\n    border-top: 0.5px solid ${({ theme }) => theme.color};\n    margin-top: 32px;\n    padding-top: 16px;\n    grid-column: 1/-1;\n  }\n\n  .post-image-source {\n    grid-column: 1/-1;\n    font-size: 14px;\n    font-style: italic;\n    color: ${({ theme }) => theme.hintColor};\n  }\n\n  @media ${device.tablet} {\n    .post-title {\n      grid-column: 2/-2;\n      font-size: 36px;\n    }\n    .post-date {\n      grid-column: 2/-2;\n    }\n\n    img {\n      grid-column: 2/-2;\n      height: 300px;\n    }\n\n    .post-content {\n      grid-column: 2/-2;\n    }\n\n    .post-comments {\n      margin-top: 64px;\n      padding-top: 32px;\n      grid-column: 2/-2;\n    }\n\n    .post-image-source {\n      grid-column: 2/-2;\n    }\n  }\n\n  @media ${device.laptop} {\n    .post-title {\n      grid-column: 3/-3;\n      font-size: 40px;\n    }\n    .post-date {\n      grid-column: 3/-3;\n    }\n\n    img {\n      grid-column: 3/-3;\n      height: 400px;\n    }\n\n    .post-content {\n      grid-column: 3/-3;\n    }\n\n    .post-comments {\n      grid-column: 3/-3;\n    }\n\n    .post-image-source {\n      grid-column: 3/-3;\n    }\n  }\n`;\n\nexport default function BlogPost({ data }: BlogPostPropTypes) {\n  const {\n    title,\n    date,\n    image_cover,\n    // tags,\n    // type,\n    html,\n  } = data;\n  return (\n    <Layout>\n      <div className=\"post-title\">{title}</div>\n      <div className=\"post-date\">{date}</div>\n      <img src={image_cover} alt={title} />\n      <span className=\"post-image-source\">the image is from unsplash </span>\n      <div\n        className=\"post-content\"\n        dangerouslySetInnerHTML={{ __html: html ?? \"\" }}\n      />\n      <div className=\"post-comments\">\n        <Comments />\n      </div>\n    </Layout>\n  );\n}\n","import React from \"react\";\nimport { graphql } from \"gatsby\";\nimport PostContent from \"@components/page/PostContent\";\nimport { SeoContainer } from \"@components/Container/seoContainer\";\nimport { graphqlSinglePostType } from \"@tool/types\";\nimport NotFoundPage from \"./404\";\n\ntype HeadPropTypes = {\n  data: graphqlSinglePostType;\n};\n\ntype TemplatePropTypes = {\n  data: graphqlSinglePostType;\n};\n\ntype renderPostPropTypes = {\n  [key: string]: React.ReactNode;\n};\n\nexport default function Template({\n  data, // this prop will be injected by the GraphQL query below.\n}: TemplatePropTypes) {\n  const { markdownRemark } = data; // data.markdownRemark holds your post data\n  const { frontmatter, html } = markdownRemark;\n  const { type = \"default\" } = frontmatter;\n\n  const renderPost: renderPostPropTypes = {\n    blog: <PostContent data={{ ...frontmatter, html }} />,\n    project: <PostContent data={{ ...frontmatter, html }} />,\n    default: <NotFoundPage />,\n  };\n\n  return renderPost[type];\n}\nexport const pageQuery = graphql`\n  query ($id: String!) {\n    markdownRemark(id: { eq: $id }) {\n      html\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        path\n        title\n        type\n        image_cover\n      }\n    }\n  }\n`;\n\nexport const Head = ({ data }: HeadPropTypes) => {\n  const { markdownRemark } = data; // data.markdownRemark holds your post data\n  const { frontmatter } = markdownRemark;\n  const { title, path } = frontmatter;\n\n  return <SeoContainer subtitle={title} pathname={path} />;\n};\n"],"names":["SeoContainer","string","title","description","pathname","subtitle","children","useStaticQuery","site","siteMetadata","defaultTitle","defaultDescription","seo","url","siteUrl","seoTitle","charAt","toUpperCase","slice","React","name","content","rel","href","Layout","styled","componentId","withConfig","displayName","Head","mdCss","css","theme","color","colors","overlayColor","qColor","device","Comments","commentsRef","useRef","useTheme","githubTheme","type","useEffect","script","document","createElement","src","setAttribute","async","COMMENT_REF","current","appendChild","innerHTML","ref","postColor","contentColor","hintColor","BlogPost","data","date","image_cover","html","className","alt","dangerouslySetInnerHTML","__html","Template","markdownRemark","frontmatter","blog","PostContent","project","default","NotFoundPage","path"],"sourceRoot":""}