{"version":3,"file":"component---src-pages-blog-js-72cc30eb68dbdf0c8c41.js","mappings":"oKAIO,IAAMA,EAAe,SAAC,GAMtB,ICV+BC,EDKpCC,EAKI,EALJA,MACAC,EAII,EAJJA,YACAC,EAGI,EAHJA,SAGI,IAFJC,SAAAA,OAEI,MAFO,KAEP,EADJC,EACI,EADJA,SAEA,GERaC,EAAAA,EAAAA,IAAe,cAYhBC,KAAKC,aFHRC,EADT,EACER,MACaS,EAFf,EAEER,YAIIS,EAAM,CACVV,MAAOA,GAASQ,EAChBP,YAAaA,GAAeQ,EAC5BE,IAAI,GATN,EAGEC,SAMkBV,GAAQ,KAItBW,EAAWV,EACVO,EAAIV,MADc,MCxBWD,EDyBMI,GCxB5BW,OAAO,GAAGC,cAAgBhB,EAAOiB,MAAM,IDyBjDN,EAAIV,MAER,OACE,gCACE,6BAAQa,GACR,wBAAMI,KAAK,cAAcC,QAASR,EAAIT,cAOtC,wBACEkB,IAAI,OACJC,KAAK,oIAENhB,EAGN,C,mGGxCKiB,EAASC,EAAAA,QAAAA,IAAAA,WAAsB,CAAEC,YAAa,gBAAxC,mEAAGD,CAAH,wvBAMiBE,EAAAA,GAAAA,YAWZ,qBAAGC,MAAkBC,UAArB,IAiBJ,qBAAGD,MAAkBE,SAArB,IAQA,qBAAGF,MAAkBE,SAArB,GAKFC,EAAAA,GAAAA,QAMQ,kCAAGC,YAAH,GAmBRD,EAAAA,GAAAA,QAgBI,SAASE,EAAT,GAAyB,IAATC,EAAQ,EAARA,KACrBC,EAAyCD,EAAzCC,YAAahC,EAA4B+B,EAA5B/B,MAAOiC,EAAqBF,EAArBE,KAAMC,EAAeH,EAAfG,KAAMC,EAASJ,EAATI,KAElCC,EAAqB,CACzBC,KAAMb,EAAAA,GAAAA,IACNc,QAASd,EAAAA,GAAAA,MAGX,OACE,gBAACH,EAAD,CAAQQ,aAAcO,EAAmBD,IAAS,SAChD,gBAAC,KAAD,CAAMI,GAAIN,GACR,uBAAKO,IAAI,aAAaC,IAAKT,EAAaU,UAAU,cAClD,uBAAKA,UAAU,QAAQR,EAAKS,MAAM,KAAK,IACvC,uBAAKD,UAAU,cAAc1C,IAIpC,C,yICzGKqB,EAASC,EAAAA,QAAAA,IAAAA,WAAsB,CAAEC,YAAa,gBAAxC,mEAAGD,CAAH,oMAIDM,EAAAA,GAAAA,OAIAA,EAAAA,GAAAA,QAMI,SAASgB,EAAT,GAA8B,IAAD,IAAbC,KAAAA,OAAa,MAAN,GAAM,EAC1C,OACE,gBAACxB,EAAD,KACGwB,EAAKC,KAAI,SAACC,EAAMC,GACf,IAAMC,EAAYF,EAAKG,YACvB,OAAO,gBAACpB,EAAA,EAAD,CAAMqB,IAAKH,EAAOjB,KAAMkB,GAChC,IAGN,C,aCtBK5B,EAASC,EAAAA,QAAAA,KAAAA,WAAH,wDAAGA,CAAH,mBAIG,SAAS8B,EAAT,GAEX,IAGAC,EAHD,EADDtB,KAEQuB,kBAEND,MAKF,OACE,gBAAC,EAAD,KACE,gBAACT,EAAD,CAAMC,KAAMQ,IAGjB,CACM,IAmBME,EAAO,kBAAM,gBAAC,IAAD,CAAcpD,SAAS,OAAOD,SAAS,SAA7C,C","sources":["webpack://Dennnnny.io/./src/components/Container/seoContainer.js","webpack://Dennnnny.io/./src/tool/functions.js","webpack://Dennnnny.io/./src/tool/useSiteMetadata.js","webpack://Dennnnny.io/./src/components/Post/index.js","webpack://Dennnnny.io/./src/components/page/Blog/index.js","webpack://Dennnnny.io/./src/pages/blog.js"],"sourcesContent":["import React from \"react\";\nimport { useSiteMetadata } from \"@tool/useSiteMetadata\";\nimport { capitalizeFirstLetter } from \"@tool/functions\";\n\nexport const SeoContainer = ({\n  title,\n  description,\n  pathname,\n  subtitle = null,\n  children,\n}) => {\n  const {\n    title: defaultTitle,\n    description: defaultDescription,\n    siteUrl,\n  } = useSiteMetadata();\n\n  const seo = {\n    title: title || defaultTitle,\n    description: description || defaultDescription,\n    url: `${siteUrl}${pathname || ``}`,\n    // twitterUsername,\n  };\n\n  const seoTitle = subtitle\n    ? `${seo.title}|${capitalizeFirstLetter(subtitle)}`\n    : seo.title;\n\n  return (\n    <>\n      <title>{seoTitle}</title>\n      <meta name=\"description\" content={seo.description} />\n      {/* <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:title\" content={seo.title} />\n      <meta name=\"twitter:url\" content={seo.url} />\n      <meta name=\"twitter:description\" content={seo.description} />\n      <meta name=\"twitter:image\" content={seo.image} />\n      <meta name=\"twitter:creator\" content={seo.twitterUsername} /> */}\n      <link\n        rel=\"icon\"\n        href=\"data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 100 100'><text y='0.9em' font-size='90'>☀️</text></svg>\"\n      />\n      {children}\n    </>\n  );\n};\n","export function capitalizeFirstLetter(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n","import { graphql, useStaticQuery } from \"gatsby\";\n\nexport const useSiteMetadata = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      site {\n        siteMetadata {\n          title\n          description\n          siteUrl\n        }\n      }\n    }\n  `);\n\n  return data.site.siteMetadata;\n};\n","import * as React from \"react\";\nimport { Link } from \"gatsby\";\nimport styled from \"styled-components\";\nimport { colors, device } from \"@layouts/styleConfig\";\n\nconst Layout = styled.div.withConfig({ componentId: \"Post_Layout\" })`\n  background-color: transparent;\n\n  grid-column: span 4 / span 4;\n  margin: 1rem 1.5rem;\n  padding-bottom: 8px;\n  border-bottom: 1px solid ${colors.lightWhite};\n\n  a {\n    text-decoration: none;\n    /* color: ${colors.white}; */\n    width: 100%;\n    transition: 0.3s;\n\n    :hover {\n      & .date,\n      .post_title {\n        color: ${({ theme }) => theme.hoverColor};\n      }\n    }\n  }\n\n  img {\n    border-radius: 12px;\n    width: 100%;\n    height: 150px;\n    object-fit: cover;\n    position: relative;\n    transition: 0.3s;\n  }\n\n  .date {\n    margin-top: 8px;\n    font-size: 16px;\n    color: ${({ theme }) => theme.postColor};\n    transition: 0.3s;\n  }\n\n  .post_title {\n    margin-top: 4px;\n    font-size: 20px;\n    font-weight: 700;\n    color: ${({ theme }) => theme.postColor};\n    overflow-wrap: break-word;\n    transition: 0.3s;\n  }\n\n  @media ${device.tablet} {\n    padding-bottom: 0;\n    border-bottom: none;\n\n    :hover {\n      img {\n        outline: ${({ outlineColor }) => `2px solid  ${outlineColor}`};\n        outline-offset: 2px;\n      }\n    }\n\n    img {\n      height: 200px;\n    }\n\n    .date {\n      margin-top: 8px;\n      font-size: 18px;\n    }\n\n    .post_title {\n      font-size: 26px;\n    }\n  }\n\n  @media ${device.laptop} {\n    img {\n      height: 250px;\n    }\n\n    .date {\n      margin-top: 8px;\n      font-size: 20px;\n    }\n\n    .post_title {\n      font-size: 30px;\n    }\n  }\n`;\n\nexport default function Post({ data }) {\n  const { image_cover, title, path, date, type } = data;\n\n  const outlineColorConfig = {\n    blog: colors.red,\n    project: colors.blue,\n  };\n\n  return (\n    <Layout outlineColor={outlineColorConfig[type] || \"white\"}>\n      <Link to={path}>\n        <img alt=\"post_cover\" src={image_cover} className=\"img_cover\" />\n        <div className=\"date\">{date.split(\"T\")[0]}</div>\n        <div className=\"post_title\">{title}</div>\n      </Link>\n    </Layout>\n  );\n}\n","import * as React from \"react\";\nimport styled from \"styled-components\";\nimport Post from \"@components/Post\";\nimport { device } from \"@layouts/styleConfig\";\n\nconst Layout = styled.div.withConfig({ componentId: \"Blog_Layout\" })`\n  display: grid;\n  grid-template-columns: repeat(4, minmax(0, 1fr));\n\n  @media ${device.tablet} {\n    grid-template-columns: repeat(8, minmax(0, 1fr));\n  }\n\n  @media ${device.laptop} {\n    margin: 0 10rem;\n    grid-template-columns: repeat(12, minmax(0, 1fr));\n  }\n`;\n\nexport default function Blog({ list = [] }) {\n  return (\n    <Layout>\n      {list.map((post, index) => {\n        const POST_DATA = post.frontmatter;\n        return <Post key={index} data={POST_DATA} />;\n      })}\n    </Layout>\n  );\n}\n","import * as React from \"react\";\nimport styled from \"styled-components\";\nimport { graphql } from \"gatsby\";\nimport Blog from \"@components/page/Blog\";\nimport { SeoContainer } from \"@components/Container/seoContainer\";\n\nconst Layout = styled.main`\n  padding: 32px;\n`;\n\nexport default function BlogList({\n  data, // this prop will be injected by the GraphQL query below.\n}) {\n  const { allMarkdownRemark } = data; // data.allMarkdownRemark holds your post data\n  const {\n    nodes,\n    // totalCount\n  } = allMarkdownRemark;\n  // console.log({ nodes });\n\n  return (\n    <Layout>\n      <Blog list={nodes} />\n    </Layout>\n  );\n}\nexport const pageQuery = graphql`\n  query MyBlogQuery {\n    allMarkdownRemark(\n      sort: { order: DESC, fields: frontmatter___date }\n      filter: { frontmatter: { path: { regex: \"/blog/\" } } }\n    ) {\n      totalCount\n      nodes {\n        frontmatter {\n          path\n          title\n          date\n          image_cover\n          type\n        }\n      }\n    }\n  }\n`;\nexport const Head = () => <SeoContainer subtitle=\"blog\" pathname=\"/blog\" />;\n"],"names":["SeoContainer","string","title","description","pathname","subtitle","children","useStaticQuery","site","siteMetadata","defaultTitle","defaultDescription","seo","url","siteUrl","seoTitle","charAt","toUpperCase","slice","name","content","rel","href","Layout","styled","componentId","colors","theme","hoverColor","postColor","device","outlineColor","Post","data","image_cover","path","date","type","outlineColorConfig","blog","project","to","alt","src","className","split","Blog","list","map","post","index","POST_DATA","frontmatter","key","BlogList","nodes","allMarkdownRemark","Head"],"sourceRoot":""}